演習3-09 
演習3-10 
正の整数値が入力されなかったときに、0が表示されプログラムが終了してしまうと思います。
そのため、「正の整数値」に入力を制限する処理が必要になります。

演習3-11
１．正の整数値に入力を制限すること。

演習3-12
１．変数名 i_n となっていますが、単に「nの値」だと分かりにくいと思います。
例えば、int i_n → int i_InputNumber とかにすると意味が伝わりやすいと思います。
２．for文のループ内で毎回if文の判定を行っていると処理が重くなる原因になったりします。

	for (int i = 1; i < i_n; i++) {
		// 1を1ずつ加算し、nの値と等しくなるまで繰り返す
		cout << i;
		// +を表示
		cout << " + ";
		// 合計値にiの値を加算していく
		i_sum += i;
	}
	cout << i_n; 

でも同じ動作をしますが、if文の判定が無いため無駄が無いです。
小規模のプログラムですと気になりませんが、何千何万回ループするプログラムなどでは違いが出てきたりします。


演習3-13
１．変数名の命名規則 int height → int i_height に修正してください(幾つかあります)
２．身長の上限／下限をユーザーが入力したときに、身長の下限が上限を超えてしまうことがありますので入力を制限する
ようにしたほうが良いです。
