//============================================================================
// Name        : e12_01.cpp
// Author      : Naoto Beppu
// Version     :
// Copyright   : Your copyright notice
// Description : 演習12-1
//               前置演算子と後置演算子は行うことがほぼ同じため、似たようなコードが各演算子関数に散らばっている
//               （例えば、増分演算子中のif文は前置版と後置版で同一であるし、減分演算子中のif文も前置版と後置版で
//               同一である。）
//               　前置演算子関数から後置演算子関数を呼び出すか、もしくは後置演算子関数から前置演算子関数を呼び出す
//               かのいずれかに変更せよ。なお、どちらの実現が好ましいかも検討すること。
//============================================================================

#include <iostream>
#include "Counter.h"

using namespace std;

int main() {
	int iNumCount = 0; // カウントアップ/カウントダウンの回数
	Counter numX; // この変数をカウントアップする
	Counter numY; // この変数をカウントダウンする

	// カウントアップ回数の入力を促す
	cout << "カウントアップ回数: ";
	// キーボードから読み込み
	cin >> iNumCount;

	// 入力したカウント回数だけ、カウントアップを行う
	for (int i = 0; i < iNumCount; i++) {
		// 前置演算子関数と後置演算子関数によるカウントアップによる値を表示する
		cout << numX++ << ' ' << ++numY << endl;
	}

	// カウントダウン回数の入力を促す
	cout << "カウントダウン回数: ";
	// キーボードから読み込み
	cin >> iNumCount;
	// 入力したカウント回数だけ、カウントダウンを行う
	for (int i = 0; i < iNumCount; i++) {
		// 前置演算子関数と後置演算子関数によるカウントダウンによる値を表示する
		cout << numX-- << ' ' << --numY << endl;
	}

	// 定義した"!"演算子より、値が0の場合の条件を考える
	if(!numX) {
		// xは0であることをアナウンス
		cout << "xは0です。" << endl;
	} else { // それ以外
		// 0でないことをアナウンス
		cout << "xは0ではありません。" << endl;
	}

	// 正常終了
	return 0;
}
